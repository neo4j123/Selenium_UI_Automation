<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-05T20:44:11 IST" name="Suite" finished-at="2024-09-05T20:44:18 IST" duration-ms="7060">
    <groups>
    </groups>
    <test started-at="2024-09-05T20:44:11 IST" name="LoginErrorValidations" finished-at="2024-09-05T20:44:14 IST" duration-ms="2552">
      <class name="com.demo.UI.Automation.Tests.LoginErrorValidatiosTest">
        <test-method is-config="true" signature="launcApplication()[pri:0, instance:com.demo.UI.Automation.Tests.LoginErrorValidatiosTest@13330ac6]" started-at="2024-09-05T20:44:12 IST" name="launcApplication" finished-at="2024-09-05T20:44:13 IST" duration-ms="1624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launcApplication -->
        <test-method signature="validateErrorMessage_Login(java.util.HashMap)[pri:0, instance:com.demo.UI.Automation.Tests.LoginErrorValidatiosTest@13330ac6]" started-at="2024-09-05T20:44:13 IST" name="validateErrorMessage_Login" data-provider="getData" finished-at="2024-09-05T20:44:14 IST" duration-ms="392" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Auto66mation@123, email=srivastava.akash42@gmail.com}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrct email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrct email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.demo.UI.Automation.Tests.LoginErrorValidatiosTest.validateErrorMessage_Login(LoginErrorValidatiosTest.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateErrorMessage_Login -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demo.UI.Automation.Tests.LoginErrorValidatiosTest@13330ac6]" started-at="2024-09-05T20:44:14 IST" name="tearDown" finished-at="2024-09-05T20:44:14 IST" duration-ms="137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.demo.UI.Automation.Tests.LoginErrorValidatiosTest -->
    </test> <!-- LoginErrorValidations -->
    <test started-at="2024-09-05T20:44:11 IST" name="E2EOrderPurchaseTest" finished-at="2024-09-05T20:44:18 IST" duration-ms="7060">
      <class name="com.demo.UI.Automation.Tests.E2ETest">
        <test-method is-config="true" signature="launcApplication()[pri:0, instance:com.demo.UI.Automation.Tests.E2ETest@3e7dd664]" started-at="2024-09-05T20:44:12 IST" name="launcApplication" finished-at="2024-09-05T20:44:13 IST" duration-ms="1624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launcApplication -->
        <test-method signature="productOrderTest(java.util.HashMap)[pri:0, instance:com.demo.UI.Automation.Tests.E2ETest@3e7dd664]" started-at="2024-09-05T20:44:13 IST" name="productOrderTest" data-provider="getData" finished-at="2024-09-05T20:44:16 IST" duration-ms="3212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Automation@123, product=ADIDAS ORIGINAL, email=srivastava.akash42@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productOrderTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demo.UI.Automation.Tests.E2ETest@3e7dd664]" started-at="2024-09-05T20:44:16 IST" name="tearDown" finished-at="2024-09-05T20:44:17 IST" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launcApplication()[pri:0, instance:com.demo.UI.Automation.Tests.E2ETest@3e7dd664]" started-at="2024-09-05T20:44:17 IST" name="launcApplication" finished-at="2024-09-05T20:44:18 IST" duration-ms="1253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launcApplication -->
        <test-method signature="productErrorValidation()[pri:0, instance:com.demo.UI.Automation.Tests.E2ETest@3e7dd664]" started-at="2024-09-05T20:44:18 IST" name="productErrorValidation" finished-at="2024-09-05T20:44:18 IST" depends-on-methods="com.demo.UI.Automation.Tests.E2ETest.productOrderTest" duration-ms="551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demo.UI.Automation.Tests.E2ETest@3e7dd664]" started-at="2024-09-05T20:44:18 IST" name="tearDown" finished-at="2024-09-05T20:44:18 IST" duration-ms="106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.demo.UI.Automation.Tests.E2ETest -->
    </test> <!-- E2EOrderPurchaseTest -->
  </suite> <!-- Suite -->
</testng-results>
